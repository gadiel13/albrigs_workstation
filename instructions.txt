Get the Flutter SDK

    Download the following installation bundle to get the latest stable release of the Flutter SDK:

For other release channels, and older builds, see the SDK archive page.

Extract the file in the desired location, for example:

 cd ~/development

 tar xf ~/Downloads/flutter_linux_v1.9.1+hotfix.6-stable.tar.xz

Add the flutter tool to your path:

 export PATH="$PATH:`pwd`/flutter/bin"

This command sets your PATH variable for the current terminal window only. To permanently add Flutter to your path, see Update your path.

Optionally, pre-download development binaries:

The flutter tool downloads platform-specific development binaries as needed. For scenarios where pre-downloading these artifacts is preferable (for example, in hermetic build environments, or with intermittent network availability), iOS and Android binaries can be downloaded ahead of time by running:

 flutter precache







 Get the source code

You can get the source code by downloading a zip or tar.gz snapshot of the master branch of the LibreSprite repository:

https://github.com/LibreSprite/LibreSprite

Or you can clone the repository and all its submodules using the following command:

git clone --recursive https://github.com/LibreSprite/LibreSprite

Linux dependencies

You will need the following dependencies (Ubuntu, Debian):

sudo apt-get update -qq
sudo apt-get install -y g++ libx11-dev libxcursor-dev cmake ninja-build

The libxcursor-dev package is needed to hide the hardware cursor.

Compiling

    Get LibreSprite code, put it in a folder like C:\LibreSprite, and create a build directory inside to leave all the files that are result of the compilation process (.exe, .lib, .obj, .a, .o, etc).

     cd C:\LibreSprite
     mkdir build

    In this way, if you want to start with a fresh copy of LibreSprite source code, you can remove the build directory and start again.

    Enter in the new directory and execute cmake:

     cd C:\LibreSprite\build
     cmake -G Ninja ..

    Here cmake needs different options depending on your platform. You must check the details for Windows, OS X, and Linux. Some cmake options can be modified using tools like ccmake or cmake-gui.

    After you have executed and configured cmake, you have to compile the project:

     cd C:\LibreSprite\build
     ninja libresprite

    When ninja finishes the compilation, you can find the executable inside C:\LibreSprite\build\bin\libresprite.exe.

Linux details

On Linux you can specify a specific directory to install LibreSprite after a ninja install command. For example:

cd LibreSprite
mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=~/software -G Ninja ..
ninja libresprite

Then, you can invoke ninja install and it will copy the program in the given location (e.g. ~/software/bin/libresprite on Linux).









Instalar o Android Studio

A configuração do Android Studio pode ser feita com apenas alguns cliques.

Primeiro, verifique se você fez o download da versão mais recente do Android Studio.
Windows

Para instalar o Android Studio no Windows, faça o seguinte:

    Se você fez o download de um arquivo .exe (recomendado), clique duas vezes nele para iniciá-lo.

    Se você fez o download de um arquivo .zip, descompacte o ZIP, copie a pasta android-studio para a pasta Arquivos de Programas, abra a pasta android-studio > bin e execute studio64.exe (para máquinas de 64 bits) ou studio.exe (para máquinas de 32 bits).
    Siga o assistente de configuração no Android Studio e instale todos os pacotes do SDK que ele recomenda.

É isso. O vídeo a seguir mostra cada etapa do procedimento de configuração ao usar o download do .exe recomendado.

O Android Studio informará a disponibilidade de novas ferramentas e outras APIs por meio de uma janela pop-up. Além disso, você pode verificar a existência de atualizações clicando em Help > Check for Update.
Mac

Para instalar o Android Studio no Mac, faça o seguinte:

    Execute o arquivo DMG do Android Studio.
    Arraste e solte o Android Studio na pasta Aplicativos e execute-o.
    Selecione se você quiser importar as configurações anteriores do Android Studio e clique em OK.
    O assistente de configuração do Android Studio orientará você no restante da configuração, incluindo o download dos componentes do Android SDK necessários para o desenvolvimento.

É isso. O vídeo a seguir mostra todas as etapas do procedimento de configuração recomendado.

O Android Studio informará a disponibilidade de novas ferramentas e outras APIs por meio de uma janela pop-up. Além disso, você pode verificar a existência de atualizações clicando em Android Studio > Check for Updates.
Linux

Para instalar o Android Studio no Linux, faça o seguinte:

    Descompacte o arquivo .zip que você transferiu por download em um local adequado para os apps, por exemplo, em /usr/local/ para seu perfil de usuário ou em /opt/ para usuários compartilhados.

    Se você estiver usando uma versão de 64 bits do Linux, primeiro instale as bibliotecas necessárias para máquinas de 64 bits.
    Para inicializar o Android Studio, abra um terminal, navegue até o diretório android-studio/bin/ e execute studio.sh.
    Selecione se você quer ou não importar as configurações anteriores do Android Studio e clique em OK.
    O assistente de configuração do Android Studio orientará você no restante da configuração, incluindo o download dos componentes do Android SDK necessários para o desenvolvimento.

Dica: para disponibilizar o Android Studio na sua lista de apps, selecione Tools > Create Desktop Entry na barra de menus do Android Studio.
Bibliotecas necessárias para máquinas de 64 bits

Se você estiver executando uma versão do Ubuntu de 64 bits, será necessário instalar algumas bibliotecas de 32 bits com o seguinte comando:

    sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386
    

Se você estiver executando o Fedora de 64 bits, o comando será:

    sudo yum install zlib.i686 ncurses-libs.i686 bzip2-libs.i686
    

É isso. O vídeo a seguir mostra todas as etapas do procedimento de configuração recomendado.

O Android Studio informará a disponibilidade de novas ferramentas e outras APIs por meio de uma janela pop-up. Além disso, você pode verificar a existência de atualizações clicando em Help > Check for Update.
Chrome OS

Siga estas etapas para instalar o Android Studio no Chrome OS:

    Instale o Linux para Chrome OS, se ainda não tiver feito isso.
    Faça o download do pacote DEB do Chrome OS na página Versão de pré-lançamento.
    Abra o app Arquivos e localize o pacote DEB na pasta Downloads em Meus arquivos.

    Com o botão direito do mouse, clique no pacote DEB e selecione Instalar com o Linux (Beta).

    O local do arquivo de destino para o pacote DEB no Chrome OS.

    Selecione se você quer importar as configurações anteriores do Android Studio e clique em OK.

    O assistente de configuração do Android Studio orientará você no restante da configuração, incluindo o download de componentes do Android SDK necessários para o desenvolvimento.

    Após a conclusão da instalação, inicie o Android Studio no acesso rápido ou no terminal do Chrome OS Linux executando studio.sh no diretório de instalação padrão:

    /opt/android-studio/bin/studio.sh

É isso. O Android Studio informará a disponibilidade de novas ferramentas e outras APIs por meio de uma janela pop-up. Além disso, você pode verificar a existência de atualizações clicando em Help > Check for Update.





latpak
Installation

Prerequisites:

You need to install the flatpak package for your distribution. Please see the official flatpak tutorial for more information and note that you have to add the flathub repository (flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo) as described in the Quick Setup.

Install from Flathub:

After you install flatpak and flathub repository, you can install Mark Text with just one command:

sudo flatpak install flathub com.github.marktext.marktext

or flatpak install --user flathub com.github.marktext.marktext to install for the current user only.

To run Mark Text just execute flatpak run com.github.marktext.marktext or click on the Mark Text icon in your application launcher.
Update

To update Mark Text run the following command:

sudo flatpak update com.github.marktext.marktext

or sudo flatpak update to update all installed flatpaks.





#lembrar do XAMPP






